{"ast":null,"code":"import moment from 'moment';\nexport default {\n  name: \"result-list-page\",\n  data: function () {\n    return {\n      results: []\n    };\n  },\n  mounted: function () {\n    this.getPosts();\n  },\n  methods: {\n    getPosts: function () {\n      const self = this;\n      self.$store.commit('loading', true);\n      self.axios.get(self.$api_url + '/results', {\n        withCredentials: true\n      }).then(res => {\n        console.log(res);\n        self.results = res.data;\n      }).catch(err => {\n        const message = err.response.data.message ? err.response.data.message : err.message;\n        self.$toast.error(message);\n      }).finally(() => {\n        self.$store.commit('loading', false);\n      });\n    },\n    deletePost: function (id, index) {\n      if (confirm(\"Are you sure to delete operation?\") === false) return;\n      const self = this;\n      self.$store.commit('loading', true);\n      self.axios.delete(self.$api_url + '/results/' + id + '/delete', {\n        withCredentials: true\n      }).then(res => {\n        console.log(res);\n        self.$toast.success(res.data.message);\n        self.results.splice(index, 1);\n      }).catch(err => {\n        const message = err.response.data.message ? err.response.data.message : err.message;\n        self.$toast.error(message);\n      }).finally(() => {\n        self.$store.commit('loading', false);\n      });\n    },\n\n    format_date(value) {\n      if (value) {\n        return moment(String(value)).format('DD/MM/YYYY');\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoDI,OAAOA,MAAP,MAAmB,QAAnB;AACA,eAAe;EACXC,IAAI,EAAE,kBADK;EAGXC,IAAI,EAAE,YAAU;IACZ,OAAO;MACHC,OAAM,EAAI;IADP,CAAP;EAGH,CAPU;EASXC,OAAM,EAAI,YAAU;IAChB,KAAKC,QAAL;EACH,CAXU;EAaXC,OAAM,EAAI;IACND,QAAQ,EAAE,YAAU;MAChB,MAAME,IAAG,GAAI,IAAb;MACAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmB,SAAnB,EAA8B,IAA9B;MAEAF,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAeJ,IAAI,CAACK,QAAL,GAAgB,UAA/B,EAA2C;QAAEC,eAAe,EAAE;MAAnB,CAA3C,EACKC,IADL,CACUC,GAAE,IAAK;QACTC,OAAO,CAACC,GAAR,CAAYF,GAAZ;QACAR,IAAI,CAACJ,OAAL,GAAeY,GAAG,CAACb,IAAnB;MACH,CAJL,EAKKgB,KALL,CAKWC,GAAE,IAAK;QACV,MAAMC,OAAM,GAAID,GAAG,CAACE,QAAJ,CAAanB,IAAb,CAAkBkB,OAAlB,GAA4BD,GAAG,CAACE,QAAJ,CAAanB,IAAb,CAAkBkB,OAA9C,GAAwDD,GAAG,CAACC,OAA5E;QACAb,IAAI,CAACe,MAAL,CAAYC,KAAZ,CAAkBH,OAAlB;MACH,CARL,EASKI,OATL,CASa,MAAM;QACXjB,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmB,SAAnB,EAA8B,KAA9B;MACH,CAXL;IAYH,CAjBK;IAkBNgB,UAAU,EAAE,UAASC,EAAT,EAAaC,KAAb,EAAmB;MAC3B,IAAGC,OAAO,CAAC,mCAAD,CAAP,KAAiD,KAApD,EACI;MAEJ,MAAMrB,IAAG,GAAI,IAAb;MACAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmB,SAAnB,EAA8B,IAA9B;MACAF,IAAI,CAACG,KAAL,CAAWmB,MAAX,CAAkBtB,IAAI,CAACK,QAAL,GAAgB,WAAhB,GAA8Bc,EAA9B,GAAmC,SAArD,EAAgE;QAAEb,eAAe,EAAE;MAAnB,CAAhE,EACKC,IADL,CACUC,GAAE,IAAK;QACTC,OAAO,CAACC,GAAR,CAAYF,GAAZ;QACAR,IAAI,CAACe,MAAL,CAAYQ,OAAZ,CAAoBf,GAAG,CAACb,IAAJ,CAASkB,OAA7B;QACAb,IAAI,CAACJ,OAAL,CAAa4B,MAAb,CAAoBJ,KAApB,EAA0B,CAA1B;MACH,CALL,EAMKT,KANL,CAMWC,GAAE,IAAK;QACV,MAAMC,OAAM,GAAID,GAAG,CAACE,QAAJ,CAAanB,IAAb,CAAkBkB,OAAlB,GAA4BD,GAAG,CAACE,QAAJ,CAAanB,IAAb,CAAkBkB,OAA9C,GAAwDD,GAAG,CAACC,OAA5E;QACAb,IAAI,CAACe,MAAL,CAAYC,KAAZ,CAAkBH,OAAlB;MACH,CATL,EAUKI,OAVL,CAUa,MAAM;QACXjB,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmB,SAAnB,EAA8B,KAA9B;MACH,CAZL;IAaH,CArCK;;IAsCNuB,WAAW,CAACC,KAAD,EAAO;MACd,IAAIA,KAAJ,EAAW;QACP,OAAOjC,MAAM,CAACkC,MAAM,CAACD,KAAD,CAAP,CAAN,CAAsBE,MAAtB,CAA6B,YAA7B,CAAP;MACJ;IACH;;EA1CK;AAbC,CAAf","names":["moment","name","data","results","mounted","getPosts","methods","self","$store","commit","axios","get","$api_url","withCredentials","then","res","console","log","catch","err","message","response","$toast","error","finally","deletePost","id","index","confirm","delete","success","splice","format_date","value","String","format"],"sourceRoot":"","sources":["C:\\Users\\RajibDas\\Desktop\\laravel+vue\\frontend\\src\\components\\pages\\results\\Index.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-title\">\r\n            <span>All Results</span>\r\n        </div>\r\n\r\n        <div v-if=\"results.length == 0\" class=\"card\">\r\n            <div class=\"card-body\">\r\n                <p>No Result are found !!</p>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"mb-3 row\">\r\n            <div class=\"col-sm-6\">\r\n                <input class=\"form-control\" type=\"text\" placeholder=\"Search result\" aria-label=\"default input example\">\r\n            </div>\r\n        </div> \r\n        <div class=\"mb-3 row\">\r\n            <div class=\"col-sm-2\">\r\n                <router-link :to=\"{ name: 'results.create' }\" class=\"btn btn-primary\">Create Student</router-link>\r\n            </div>\r\n        </div>\r\n\r\n        <table v-if=\"results.length\" class=\"table table-bordered\">\r\n            <thead>\r\n            <tr>\r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">Student ID</th>\r\n                <th scope=\"col\">GPA </th>\r\n                <th scope=\"col\">Date</th>\r\n                <th scope=\"col\">Action</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr v-for=\"(result, index) in results\" v-bind:key=\"index\">\r\n                <th scope=\"row\">{{ result.id }}</th>\r\n                <td>{{ result.student_id }}</td>\r\n                <td>{{ result.gpa}}</td>\r\n                <td>{{ format_date(result.date)}}</td>\r\n                <td>\r\n                    <button @click=\"$router.push('/results/'+result.id+'/update')\" class=\"btn btn-warning btn-sm mr-2\">Edit</button>\r\n                    <button @click=\"deletePost(result.id, index)\" class=\"btn btn-danger btn-sm\">Delete</button>\r\n                </td>\r\n            </tr>\r\n\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import moment from 'moment';\r\n    export default {\r\n        name: \"result-list-page\",\r\n\r\n        data: function(){\r\n            return {\r\n                results : [],\r\n            }\r\n        },\r\n\r\n        mounted : function(){\r\n            this.getPosts();\r\n        },\r\n\r\n        methods : {\r\n            getPosts: function(){\r\n                const self = this;\r\n                self.$store.commit('loading', true);\r\n\r\n                self.axios.get(self.$api_url + '/results', { withCredentials: true,})\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        self.results = res.data;\r\n                    })\r\n                    .catch(err => {\r\n                        const message = err.response.data.message ? err.response.data.message : err.message;\r\n                        self.$toast.error(message);\r\n                    })\r\n                    .finally(() => {\r\n                        self.$store.commit('loading', false);\r\n                    });\r\n            },\r\n            deletePost: function(id, index){\r\n                if(confirm(\"Are you sure to delete operation?\") === false)\r\n                    return;\r\n\r\n                const self = this;\r\n                self.$store.commit('loading', true);\r\n                self.axios.delete(self.$api_url + '/results/' + id + '/delete', { withCredentials: true,})\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        self.$toast.success(res.data.message);\r\n                        self.results.splice(index,1);\r\n                    })\r\n                    .catch(err => {\r\n                        const message = err.response.data.message ? err.response.data.message : err.message;\r\n                        self.$toast.error(message);\r\n                    })\r\n                    .finally(() => {\r\n                        self.$store.commit('loading', false);\r\n                    });\r\n            },\r\n            format_date(value){\r\n                if (value) {\r\n                    return moment(String(value)).format('DD/MM/YYYY')\r\n                }\r\n            },\r\n        }\r\n    }\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}