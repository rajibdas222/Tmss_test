{"ast":null,"code":"export default {\n  name: 'department-update-page',\n  data: function () {\n    return {\n      result: {\n        name: '',\n        batch_name: '',\n        department_id: ''\n      },\n      errors: {\n        name: '',\n        batch_name: '',\n        department_id: ''\n      }\n    };\n  },\n  watch: {\n    'student.name': function (newName) {\n      this.errors.name = newName ? '' : 'Name is required';\n    },\n    'student.batch_name': function (newBatchname) {\n      this.errors.name = newBatchname ? '' : 'Batch Name is required';\n    }\n  },\n  computed: {\n    isFormValid: function () {\n      let valid = true;\n      const self = this;\n\n      for (const [key, value] of Object.entries(self.errors)) {\n        if (self.result[key] == '' || value != '') {\n          valid = false;\n          break;\n        }\n      }\n\n      return valid;\n    }\n  },\n  mounted: function () {\n    this.show(this.$route.params.id);\n    const self = this;\n    self.axios.get(self.$api_url + '/dept_list', self.dept_lists, {\n      withCredentials: true\n    }).then(res => {\n      console.log(res);\n      self.dept_lists = res.data;\n    }).catch(err => {\n      const message = err.response.data.message ? err.response.data.message : err.message;\n      self.$toast.error(message);\n    }).finally(() => {\n      self.$store.commit('loading', false);\n    });\n  },\n  methods: {\n    show: function (id) {\n      const self = this;\n      self.$store.commit('loading', true);\n      self.axios.get(self.$api_url + '/results/' + id + '/show', {\n        withCredentials: true\n      }).then(res => {\n        self.result = res.data;\n      }).catch(err => {\n        const message = err.response.data.message ? err.response.data.message : err.message;\n        self.$toast.error(message);\n        self.$router.push('/results');\n      }).finally(() => {\n        self.$store.commit('loading', false);\n      });\n    },\n    update: function (e, id) {\n      e.preventDefault();\n      const self = this;\n      if (self.isFormValid == false) return false;\n      self.$store.commit('loading', true);\n      self.axios.put(self.$api_url + '/results/' + id + '/update', self.post, {\n        withCredentials: true\n      }).then(res => {\n        console.log(res);\n        self.$toast.success(res.data.message);\n        self.$router.push('/students');\n      }).catch(err => {\n        const message = err.response.data.message ? err.response.data.message : err.message;\n        self.$toast.error(message);\n        self.$router.push('/students');\n      }).finally(() => {\n        self.$store.commit('loading', false);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","data","result","batch_name","department_id","errors","watch","newName","newBatchname","computed","isFormValid","valid","self","key","value","Object","entries","mounted","show","$route","params","id","axios","get","$api_url","dept_lists","withCredentials","then","res","console","log","catch","err","message","response","$toast","error","finally","$store","commit","methods","$router","push","update","e","preventDefault","put","post","success"],"sourceRoot":"","sources":["C:\\Users\\RajibDas\\Desktop\\laravel+vue\\frontend\\src\\components\\pages\\results\\Update.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-title\">\r\n            <span>Edit Result</span>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n\r\n                <form v-on:submit=\"update($event, $route.params.id)\">\r\n\r\n                </form>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'department-update-page',\r\n        data: function(){\r\n            return {\r\n                result : {\r\n                    name : '',\r\n                    batch_name : '',\r\n                    department_id:''\r\n                },\r\n                errors : {\r\n                    name : '',\r\n                    batch_name : '',\r\n                    department_id:''\r\n                },\r\n            }\r\n        },\r\n        watch:{\r\n            'student.name': function(newName){\r\n                this.errors.name =  newName ? '' : 'Name is required';\r\n            },\r\n\r\n            'student.batch_name': function(newBatchname){\r\n                this.errors.name =  newBatchname ? '' : 'Batch Name is required';\r\n            },\r\n\r\n        },\r\n        computed:{\r\n            isFormValid: function(){\r\n                let valid = true;\r\n                const self = this;\r\n                for (const [key, value] of Object.entries(self.errors)) {\r\n                    if(self.result[key] == '' || value != ''){\r\n                        valid = false;\r\n                        break;\r\n                    }\r\n                }\r\n                return valid;\r\n            }\r\n        },\r\n        mounted: function() {\r\n            this.show(this.$route.params.id);\r\n\r\n            const self = this;\r\n            self.axios.get(self.$api_url + '/dept_list', self.dept_lists, { withCredentials: true,})\r\n                .then(res => {\r\n                    console.log(res);\r\n                    self.dept_lists = res.data;\r\n                })\r\n                .catch(err => {\r\n                    const message = err.response.data.message ? err.response.data.message : err.message;\r\n                    self.$toast.error(message);\r\n                })\r\n                .finally(() => {\r\n                    self.$store.commit('loading', false);\r\n                });\r\n        },\r\n        methods : {\r\n\r\n            show: function(id){\r\n                const self = this;\r\n                self.$store.commit('loading', true);\r\n                self.axios.get(self.$api_url + '/results/'+id+'/show', { withCredentials: true,})\r\n                    .then(res => {\r\n                        self.result = res.data;\r\n                    })\r\n                    .catch(err => {\r\n                        const message = err.response.data.message ? err.response.data.message : err.message;\r\n                        self.$toast.error(message);\r\n                        self.$router.push('/results');\r\n                    })\r\n                    .finally(() => {\r\n                        self.$store.commit('loading', false);\r\n                    });\r\n            },\r\n\r\n            update: function(e, id){\r\n                e.preventDefault();\r\n                const self = this;\r\n                if(self.isFormValid == false)\r\n                    return false;\r\n\r\n                self.$store.commit('loading', true);\r\n                self.axios.put(self.$api_url + '/results/' + id + '/update', self.post, { withCredentials: true,})\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        self.$toast.success(res.data.message);\r\n                        self.$router.push('/students');\r\n                    })\r\n                    .catch(err => {\r\n                        const message = err.response.data.message ? err.response.data.message : err.message;\r\n                        self.$toast.error(message);\r\n                        self.$router.push('/students');\r\n                    })\r\n                    .finally(() => {\r\n                        self.$store.commit('loading', false);\r\n                    });\r\n            }\r\n\r\n        }\r\n    }\r\n</script>"]},"metadata":{},"sourceType":"module"}