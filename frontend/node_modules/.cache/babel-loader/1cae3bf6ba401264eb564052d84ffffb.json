{"ast":null,"code":"export default {\n  name: 'department-create-page',\n  data: function () {\n    return {\n      student: {\n        gpa: '',\n        date: '',\n        student_id: ''\n      },\n      errors: {\n        gpa: '',\n        date: '',\n        student_id: ''\n      },\n      student_id: null\n    };\n  },\n\n  mounted() {\n    const self = this;\n    self.axios.get(self.$api_url + '/dept_list', self.dept_lists, {\n      withCredentials: true\n    }).then(res => {\n      console.log(res);\n      self.dept_lists = res.data;\n    }).catch(err => {\n      const message = err.response.data.message ? err.response.data.message : err.message;\n      self.$toast.error(message);\n    }).finally(() => {\n      self.$store.commit('loading', false);\n    });\n  },\n\n  watch: {\n    'student.name': function (newName) {\n      this.errors.student = newName ? '' : 'Name is required';\n    }\n  },\n  computed: {\n    isFormValid: function () {\n      let valid = true;\n      const self = this;\n\n      for (const [key, value] of Object.entries(self.errors)) {\n        if (self.student[key] == '' || value != '') {\n          valid = false;\n          break;\n        }\n      }\n\n      return valid;\n    }\n  },\n  methods: {\n    clear: function () {\n      this.student = {\n        name: '',\n        batch_name: ''\n      };\n    },\n    create: function (e) {\n      e.preventDefault();\n      const self = this;\n      if (self.isFormValid == false) return false;\n      self.$store.commit('loading', true);\n      self.axios.post(self.$api_url + '/students', self.student, {\n        withCredentials: true\n      }).then(res => {\n        console.log(res);\n        self.$toast.success(res.data.message);\n        self.clear();\n        self.$router.push('/students');\n      }).catch(err => {\n        const message = err.response.data.message ? err.response.data.message : err.message;\n        self.$toast.error(message);\n      }).finally(() => {\n        self.$store.commit('loading', false);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","data","student","gpa","date","student_id","errors","mounted","self","axios","get","$api_url","dept_lists","withCredentials","then","res","console","log","catch","err","message","response","$toast","error","finally","$store","commit","watch","newName","computed","isFormValid","valid","key","value","Object","entries","methods","clear","batch_name","create","e","preventDefault","post","success","$router","push"],"sourceRoot":"","sources":["C:\\Users\\RajibDas\\Desktop\\laravel+vue\\frontend\\src\\components\\pages\\results\\Create.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-title\">\r\n            <span>Create Result</span>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n\r\n                <form v-on:submit=\"create($event)\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\">Student id <span class=\"text-danger\">*</span></label>\r\n                        <select v-model=\"student.student_id\" class=\"form-select form-control\" name=\"student_id\" >\r\n                            <option selected>Select Student id</option>\r\n                            <option v-for=\"st_id in st_ids\" :key=\"dept\"  :value=\"st_id.id\">{{st_id.id}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"gpa\">GPA <span class=\"text-danger\">*</span></label>\r\n                        <input v-model=\"student.gpa\" type=\"text\" class=\"form-control\" id=\"gpa\" >\r\n                        <small class=\"form-text text-danger\">{{ errors.gpa }}</small>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"date\">Date <span class=\"text-danger\">*</span></label>\r\n                        <input v-model=\"student.date\" type=\"text\" class=\"form-control\" id=\"date\" >\r\n                        <small class=\"form-text text-danger\">{{ errors.date }}</small>\r\n                    </div>\r\n\r\n                    <div class=\"text-center my-3\">\r\n                        <button type=\"button\" class=\"btn btn-default mr-3\" @click=\"$router.push('/students')\">Back</button>\r\n                        <button type=\"submit\" class=\"btn btn-success\" :disabled=\"!isFormValid\">Create</button>\r\n                    </div>\r\n                </form>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'department-create-page',\r\n        data: function(){\r\n            return {\r\n                student : {\r\n                    gpa : '',\r\n                    date : '',\r\n                    student_id:''\r\n                },\r\n                errors : {\r\n                    gpa : '',\r\n                    date : '',\r\n                    student_id:''\r\n                },\r\n                student_id:null,\r\n            }\r\n        },\r\n\r\n        mounted() {\r\n            const self = this;\r\n            self.axios.get(self.$api_url + '/dept_list', self.dept_lists, { withCredentials: true,})\r\n                .then(res => {\r\n                    console.log(res);\r\n                    self.dept_lists = res.data;\r\n                })\r\n                .catch(err => {\r\n                    const message = err.response.data.message ? err.response.data.message : err.message;\r\n                    self.$toast.error(message);\r\n                })\r\n                .finally(() => {\r\n                    self.$store.commit('loading', false);\r\n                });\r\n        },\r\n\r\n        watch:{\r\n            'student.name': function(newName){\r\n                this.errors.student =  newName ? '' : 'Name is required';\r\n            },\r\n\r\n        },\r\n        computed:{\r\n            isFormValid: function(){\r\n                let valid = true;\r\n                const self = this;\r\n                for (const [key, value] of Object.entries(self.errors)) {\r\n                    if(self.student[key] == '' || value != ''){\r\n                        valid = false;\r\n                        break;\r\n                    }\r\n                }\r\n                return valid;\r\n            }\r\n        },\r\n        methods : {\r\n            clear: function(){\r\n                this.student = {\r\n                    name : '',\r\n                    batch_name : '',\r\n                }\r\n            },\r\n            create: function(e){\r\n                e.preventDefault();\r\n                const self = this;\r\n                if(self.isFormValid == false)\r\n                    return false;\r\n\r\n                self.$store.commit('loading', true);\r\n                self.axios.post(self.$api_url + '/students', self.student, { withCredentials: true,})\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        self.$toast.success(res.data.message);\r\n                        self.clear();\r\n                        self.$router.push('/students');\r\n                    })\r\n                    .catch(err => {\r\n                        const message = err.response.data.message ? err.response.data.message : err.message;\r\n                        self.$toast.error(message);\r\n                    })\r\n                    .finally(() => {\r\n                        self.$store.commit('loading', false);\r\n                    });\r\n            }\r\n\r\n        }\r\n    }\r\n</script>"]},"metadata":{},"sourceType":"module"}