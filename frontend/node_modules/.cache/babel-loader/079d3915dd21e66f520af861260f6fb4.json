{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"page-title\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, \"Edit Result\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  class: \"card\"\n};\nconst _hoisted_3 = {\n  class: \"card-body\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", {\n    onSubmit: _cache[0] || (_cache[0] = $event => $options.update($event, _ctx.$route.params.id))\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  )])])]);\n}","map":{"version":3,"mappings":";;gCAEQA,oBAEM,KAFN,EAEM;EAFDC,KAAK,EAAC;AAEL,CAFN,EAAuB,cACnBD,oBAAwB,MAAxB,EAAwB,IAAxB,EAAM,aAAN,CADmB,CAAvB;;AAAA;;;EAIKC,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;uBANnBC,oBAgBM,KAhBN,EAgBM,IAhBN,EAgBM,CAfFC,UAeE,EAXFH,oBASM,KATN,cASM,CARFA,oBAOM,KAPN,cAOM,CALFA,oBAEO,MAFP,EAEO;IAFII,QAAM,sCAAEC,gBAAOC,MAAP,EAAeC,YAAOC,MAAP,CAAcC,EAA7B,CAAF;EAEV,CAFP;;EAAA,CAKE,CAPN,CAQE,CATN,CAWE,CAhBN","names":["_createElementVNode","class","_createElementBlock","_hoisted_1","onSubmit","$options","$event","_ctx","params","id"],"sourceRoot":"","sources":["C:\\Users\\RajibDas\\Desktop\\laravel+vue\\frontend\\src\\components\\pages\\results\\Update.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-title\">\r\n            <span>Edit Result</span>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n\r\n                <form v-on:submit=\"update($event, $route.params.id)\">\r\n\r\n                </form>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'department-update-page',\r\n        data: function(){\r\n            return {\r\n                student : {\r\n                    name : '',\r\n                    batch_name : '',\r\n                    department_id:''\r\n                },\r\n                errors : {\r\n                    name : '',\r\n                    batch_name : '',\r\n                    department_id:''\r\n                },\r\n            }\r\n        },\r\n        watch:{\r\n            'student.name': function(newName){\r\n                this.errors.name =  newName ? '' : 'Name is required';\r\n            },\r\n\r\n            'student.batch_name': function(newBatchname){\r\n                this.errors.name =  newBatchname ? '' : 'Batch Name is required';\r\n            },\r\n\r\n        },\r\n        computed:{\r\n            isFormValid: function(){\r\n                let valid = true;\r\n                const self = this;\r\n                for (const [key, value] of Object.entries(self.errors)) {\r\n                    if(self.student[key] == '' || value != ''){\r\n                        valid = false;\r\n                        break;\r\n                    }\r\n                }\r\n                return valid;\r\n            }\r\n        },\r\n        mounted: function() {\r\n            this.show(this.$route.params.id);\r\n\r\n            const self = this;\r\n            self.axios.get(self.$api_url + '/dept_list', self.dept_lists, { withCredentials: true,})\r\n                .then(res => {\r\n                    console.log(res);\r\n                    self.dept_lists = res.data;\r\n                })\r\n                .catch(err => {\r\n                    const message = err.response.data.message ? err.response.data.message : err.message;\r\n                    self.$toast.error(message);\r\n                })\r\n                .finally(() => {\r\n                    self.$store.commit('loading', false);\r\n                });\r\n        },\r\n        methods : {\r\n\r\n            show: function(id){\r\n                const self = this;\r\n                self.$store.commit('loading', true);\r\n                self.axios.get(self.$api_url + '/students/'+id+'/show', { withCredentials: true,})\r\n                    .then(res => {\r\n                        self.department = res.data;\r\n                    })\r\n                    .catch(err => {\r\n                        const message = err.response.data.message ? err.response.data.message : err.message;\r\n                        self.$toast.error(message);\r\n                        self.$router.push('/students');\r\n                    })\r\n                    .finally(() => {\r\n                        self.$store.commit('loading', false);\r\n                    });\r\n            },\r\n\r\n            update: function(e, id){\r\n                e.preventDefault();\r\n                const self = this;\r\n                if(self.isFormValid == false)\r\n                    return false;\r\n\r\n                self.$store.commit('loading', true);\r\n                self.axios.put(self.$api_url + '/students/' + id + '/update', self.post, { withCredentials: true,})\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        self.$toast.success(res.data.message);\r\n                        self.$router.push('/students');\r\n                    })\r\n                    .catch(err => {\r\n                        const message = err.response.data.message ? err.response.data.message : err.message;\r\n                        self.$toast.error(message);\r\n                        self.$router.push('/students');\r\n                    })\r\n                    .finally(() => {\r\n                        self.$store.commit('loading', false);\r\n                    });\r\n            }\r\n\r\n        }\r\n    }\r\n</script>"]},"metadata":{},"sourceType":"module"}