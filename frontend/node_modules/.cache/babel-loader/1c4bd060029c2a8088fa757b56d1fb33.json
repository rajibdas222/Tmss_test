{"ast":null,"code":"export default {\n  name: 'student-update-page',\n  data: function () {\n    return {\n      student: {\n        name: '',\n        batch_name: '',\n        department_id: ''\n      },\n      errors: {\n        name: '',\n        batch_name: '',\n        department_id: ''\n      },\n      dept_lists: null\n    };\n  },\n  watch: {\n    'student.name': function (newName) {\n      this.errors.name = newName ? '' : 'Name is required';\n    },\n    'student.batch_name': function (newBatchname) {\n      this.errors.name = newBatchname ? '' : 'Batch Name is required';\n    }\n  },\n  computed: {\n    isFormValid: function () {\n      let valid = true;\n      const self = this;\n\n      for (const [key, value] of Object.entries(self.errors)) {\n        if (self.student[key] == '' || value != '') {\n          valid = false;\n          break;\n        }\n      }\n\n      return valid;\n    }\n  },\n  mounted: function () {\n    this.show(this.$route.params.id);\n    const self = this;\n    self.axios.get(self.$api_url + '/dept_list', self.dept_lists, {\n      withCredentials: true\n    }).then(res => {\n      console.log(res);\n      self.dept_lists = res.data;\n    }).catch(err => {\n      const message = err.response.data.message ? err.response.data.message : err.message;\n      self.$toast.error(message);\n    }).finally(() => {\n      self.$store.commit('loading', false);\n    });\n  },\n  methods: {\n    show: function (id) {\n      const self = this;\n      self.$store.commit('loading', true);\n      self.axios.get(self.$api_url + '/students/' + id + '/show', {\n        withCredentials: true\n      }).then(res => {\n        self.student = res.data;\n      }).catch(err => {\n        const message = err.response.data.message ? err.response.data.message : err.message;\n        self.$toast.error(message);\n        self.$router.push('/students');\n      }).finally(() => {\n        self.$store.commit('loading', false);\n      });\n    },\n    update: function (e, id) {\n      e.preventDefault();\n      const self = this;\n      if (self.isFormValid == false) return false;\n      self.$store.commit('loading', true);\n      self.axios.put(self.$api_url + '/students/' + id + '/update', self.student, {\n        withCredentials: true\n      }).then(res => {\n        console.log(res);\n        self.$toast.success(res.data.message);\n        self.$router.push('/students');\n      }).catch(err => {\n        const message = err.response.data.message ? err.response.data.message : err.message;\n        self.$toast.error(message);\n        self.$router.push('/students');\n      }).finally(() => {\n        self.$store.commit('loading', false);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","data","student","batch_name","department_id","errors","dept_lists","watch","newName","newBatchname","computed","isFormValid","valid","self","key","value","Object","entries","mounted","show","$route","params","id","axios","get","$api_url","withCredentials","then","res","console","log","catch","err","message","response","$toast","error","finally","$store","commit","methods","$router","push","update","e","preventDefault","put","success"],"sourceRoot":"","sources":["C:\\Users\\RajibDas\\Desktop\\laravel+vue\\frontend\\src\\components\\pages\\students\\Update.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-title\">\r\n            <span>Edit Student</span>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n\r\n                <form v-on:submit=\"update($event, $route.params.id)\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\">Name <span class=\"text-danger\">*</span></label>\r\n                        <input v-model=\"student.name\" type=\"text\" class=\"form-control\" id=\"name\" >\r\n                        <small class=\"form-text text-danger\">{{ errors.name }}</small>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\">Department id<span class=\"text-danger\"></span></label>\r\n                        <select v-model=\"student.department_id\" class=\"form-select form-control\" name=\"department_id\" >\r\n                            <option selected>Update department</option>\r\n                            <option v-for=\"dept in dept_lists\" :key=\"dept\"  v-bind:value=\"dept\">{{dept.name}}</option>\r\n                        </select>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"batch_name\">Batch Name <span class=\"text-danger\">*</span></label>\r\n                        <input v-model=\"student.batch_name\" type=\"text\" class=\"form-control\" id=\"batch_name\" >\r\n                        <small class=\"form-text text-danger\">{{ errors.batch_name }}</small>\r\n                    </div>\r\n\r\n                    <div class=\"text-center my-3\">\r\n                        <button type=\"button\" class=\"btn btn-default mr-3\" @click=\"$router.push('/students')\">Back</button>\r\n                        <button type=\"submit\" class=\"btn btn-success\" :disabled=\"!isFormValid\">Update</button>\r\n                    </div>\r\n                </form>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'student-update-page',\r\n        data: function(){\r\n            return {\r\n                student : {\r\n                    name : '',\r\n                    batch_name : '',\r\n                    department_id:''\r\n                },\r\n                errors : {\r\n                    name : '',\r\n                    batch_name : '',\r\n                    department_id:''\r\n                },\r\n\r\n                dept_lists: null\r\n            }\r\n        },\r\n        watch:{\r\n            'student.name': function(newName){\r\n                this.errors.name =  newName ? '' : 'Name is required';\r\n            },\r\n\r\n            'student.batch_name': function(newBatchname){\r\n                this.errors.name =  newBatchname ? '' : 'Batch Name is required';\r\n            },\r\n\r\n        },\r\n        computed:{\r\n            isFormValid: function(){\r\n                let valid = true;\r\n                const self = this;\r\n                for (const [key, value] of Object.entries(self.errors)) {\r\n                    if(self.student[key] == '' || value != ''){\r\n                        valid = false;\r\n                        break;\r\n                    }\r\n                }\r\n                return valid;\r\n            }\r\n        },\r\n        mounted: function() {\r\n            this.show(this.$route.params.id);\r\n\r\n            const self = this;\r\n            self.axios.get(self.$api_url + '/dept_list', self.dept_lists, { withCredentials: true,})\r\n                .then(res => {\r\n                    console.log(res);\r\n                    self.dept_lists = res.data;\r\n                })\r\n                .catch(err => {\r\n                    const message = err.response.data.message ? err.response.data.message : err.message;\r\n                    self.$toast.error(message);\r\n                })\r\n                .finally(() => {\r\n                    self.$store.commit('loading', false);\r\n                });\r\n        },\r\n        methods : {\r\n\r\n            show: function(id){\r\n                const self = this;\r\n                self.$store.commit('loading', true);\r\n                self.axios.get(self.$api_url + '/students/'+id+'/show', { withCredentials: true,})\r\n                    .then(res => {\r\n                        self.student = res.data;\r\n                    })\r\n                    .catch(err => {\r\n                        const message = err.response.data.message ? err.response.data.message : err.message;\r\n                        self.$toast.error(message);\r\n                        self.$router.push('/students');\r\n                    })\r\n                    .finally(() => {\r\n                        self.$store.commit('loading', false);\r\n                    });\r\n            },\r\n\r\n            update: function(e, id){\r\n                e.preventDefault();\r\n                const self = this;\r\n                if(self.isFormValid == false)\r\n                    return false;\r\n\r\n                self.$store.commit('loading', true);\r\n                self.axios.put(self.$api_url + '/students/' + id + '/update', self.student, { withCredentials: true,})\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        self.$toast.success(res.data.message);\r\n                        self.$router.push('/students');\r\n                    })\r\n                    .catch(err => {\r\n                        const message = err.response.data.message ? err.response.data.message : err.message;\r\n                        self.$toast.error(message);\r\n                        self.$router.push('/students');\r\n                    })\r\n                    .finally(() => {\r\n                        self.$store.commit('loading', false);\r\n                    });\r\n            }\r\n\r\n        }\r\n    }\r\n</script>"]},"metadata":{},"sourceType":"module"}